// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mr.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_mr_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_mr_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mr_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mr_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mr_2eproto;
namespace MapReduce {
class FinishMsg;
struct FinishMsgDefaultTypeInternal;
extern FinishMsgDefaultTypeInternal _FinishMsg_default_instance_;
class HeartBeatMsg;
struct HeartBeatMsgDefaultTypeInternal;
extern HeartBeatMsgDefaultTypeInternal _HeartBeatMsg_default_instance_;
class HeartBeatReply;
struct HeartBeatReplyDefaultTypeInternal;
extern HeartBeatReplyDefaultTypeInternal _HeartBeatReply_default_instance_;
class NodeMessage;
struct NodeMessageDefaultTypeInternal;
extern NodeMessageDefaultTypeInternal _NodeMessage_default_instance_;
class Reply;
struct ReplyDefaultTypeInternal;
extern ReplyDefaultTypeInternal _Reply_default_instance_;
}  // namespace MapReduce
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace MapReduce {
enum TaskType : int {
  map = 0,
  reduce = 1,
  TaskType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TaskType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TaskType_IsValid(int value);
extern const uint32_t TaskType_internal_data_[];
constexpr TaskType TaskType_MIN = static_cast<TaskType>(0);
constexpr TaskType TaskType_MAX = static_cast<TaskType>(1);
constexpr int TaskType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
TaskType_descriptor();
template <typename T>
const std::string& TaskType_Name(T value) {
  static_assert(std::is_same<T, TaskType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TaskType_Name().");
  return TaskType_Name(static_cast<TaskType>(value));
}
template <>
inline const std::string& TaskType_Name(TaskType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TaskType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool TaskType_Parse(absl::string_view name, TaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskType>(
      TaskType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Reply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MapReduce.Reply) */ {
 public:
  inline Reply() : Reply(nullptr) {}
  ~Reply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Reply(
      ::google::protobuf::internal::ConstantInitialized);

  inline Reply(const Reply& from) : Reply(nullptr, from) {}
  inline Reply(Reply&& from) noexcept
      : Reply(nullptr, std::move(from)) {}
  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reply& operator=(Reply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Reply& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reply* internal_default_instance() {
    return reinterpret_cast<const Reply*>(
        &_Reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Reply& a, Reply& b) { a.Swap(&b); }
  inline void Swap(Reply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Reply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Reply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Reply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Reply& from) { Reply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Reply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MapReduce.Reply"; }

 protected:
  explicit Reply(::google::protobuf::Arena* arena);
  Reply(::google::protobuf::Arena* arena, const Reply& from);
  Reply(::google::protobuf::Arena* arena, Reply&& from) noexcept
      : Reply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 2,
    kTaskTypeFieldNumber = 1,
  };
  // string fileName = 2;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // .MapReduce.TaskType taskType = 1;
  void clear_tasktype() ;
  ::MapReduce::TaskType tasktype() const;
  void set_tasktype(::MapReduce::TaskType value);

  private:
  ::MapReduce::TaskType _internal_tasktype() const;
  void _internal_set_tasktype(::MapReduce::TaskType value);

  public:
  // @@protoc_insertion_point(class_scope:MapReduce.Reply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Reply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Reply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr filename_;
    int tasktype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mr_2eproto;
};
// -------------------------------------------------------------------

class NodeMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MapReduce.NodeMessage) */ {
 public:
  inline NodeMessage() : NodeMessage(nullptr) {}
  ~NodeMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeMessage(const NodeMessage& from) : NodeMessage(nullptr, from) {}
  inline NodeMessage(NodeMessage&& from) noexcept
      : NodeMessage(nullptr, std::move(from)) {}
  inline NodeMessage& operator=(const NodeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeMessage& operator=(NodeMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeMessage* internal_default_instance() {
    return reinterpret_cast<const NodeMessage*>(
        &_NodeMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NodeMessage& a, NodeMessage& b) { a.Swap(&b); }
  inline void Swap(NodeMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NodeMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeMessage& from) { NodeMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MapReduce.NodeMessage"; }

 protected:
  explicit NodeMessage(::google::protobuf::Arena* arena);
  NodeMessage(::google::protobuf::Arena* arena, const NodeMessage& from);
  NodeMessage(::google::protobuf::Arena* arena, NodeMessage&& from) noexcept
      : NodeMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsBusyFieldNumber = 1,
  };
  // bool isBusy = 1;
  void clear_isbusy() ;
  bool isbusy() const;
  void set_isbusy(bool value);

  private:
  bool _internal_isbusy() const;
  void _internal_set_isbusy(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MapReduce.NodeMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeMessage& from_msg);
    bool isbusy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mr_2eproto;
};
// -------------------------------------------------------------------

class HeartBeatReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MapReduce.HeartBeatReply) */ {
 public:
  inline HeartBeatReply() : HeartBeatReply(nullptr) {}
  ~HeartBeatReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HeartBeatReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline HeartBeatReply(const HeartBeatReply& from) : HeartBeatReply(nullptr, from) {}
  inline HeartBeatReply(HeartBeatReply&& from) noexcept
      : HeartBeatReply(nullptr, std::move(from)) {}
  inline HeartBeatReply& operator=(const HeartBeatReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartBeatReply& operator=(HeartBeatReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeartBeatReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeartBeatReply* internal_default_instance() {
    return reinterpret_cast<const HeartBeatReply*>(
        &_HeartBeatReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(HeartBeatReply& a, HeartBeatReply& b) { a.Swap(&b); }
  inline void Swap(HeartBeatReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartBeatReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeartBeatReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HeartBeatReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HeartBeatReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HeartBeatReply& from) { HeartBeatReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HeartBeatReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MapReduce.HeartBeatReply"; }

 protected:
  explicit HeartBeatReply(::google::protobuf::Arena* arena);
  HeartBeatReply(::google::protobuf::Arena* arena, const HeartBeatReply& from);
  HeartBeatReply(::google::protobuf::Arena* arena, HeartBeatReply&& from) noexcept
      : HeartBeatReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReceiveFieldNumber = 1,
  };
  // bool receive = 1;
  void clear_receive() ;
  bool receive() const;
  void set_receive(bool value);

  private:
  bool _internal_receive() const;
  void _internal_set_receive(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MapReduce.HeartBeatReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HeartBeatReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HeartBeatReply& from_msg);
    bool receive_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mr_2eproto;
};
// -------------------------------------------------------------------

class HeartBeatMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MapReduce.HeartBeatMsg) */ {
 public:
  inline HeartBeatMsg() : HeartBeatMsg(nullptr) {}
  ~HeartBeatMsg() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HeartBeatMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline HeartBeatMsg(const HeartBeatMsg& from) : HeartBeatMsg(nullptr, from) {}
  inline HeartBeatMsg(HeartBeatMsg&& from) noexcept
      : HeartBeatMsg(nullptr, std::move(from)) {}
  inline HeartBeatMsg& operator=(const HeartBeatMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartBeatMsg& operator=(HeartBeatMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeartBeatMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeartBeatMsg* internal_default_instance() {
    return reinterpret_cast<const HeartBeatMsg*>(
        &_HeartBeatMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(HeartBeatMsg& a, HeartBeatMsg& b) { a.Swap(&b); }
  inline void Swap(HeartBeatMsg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartBeatMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeartBeatMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HeartBeatMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HeartBeatMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HeartBeatMsg& from) { HeartBeatMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HeartBeatMsg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MapReduce.HeartBeatMsg"; }

 protected:
  explicit HeartBeatMsg(::google::protobuf::Arena* arena);
  HeartBeatMsg(::google::protobuf::Arena* arena, const HeartBeatMsg& from);
  HeartBeatMsg(::google::protobuf::Arena* arena, HeartBeatMsg&& from) noexcept
      : HeartBeatMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostnameFieldNumber = 1,
  };
  // string hostname = 1;
  void clear_hostname() ;
  const std::string& hostname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hostname(Arg_&& arg, Args_... args);
  std::string* mutable_hostname();
  PROTOBUF_NODISCARD std::string* release_hostname();
  void set_allocated_hostname(std::string* value);

  private:
  const std::string& _internal_hostname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hostname(
      const std::string& value);
  std::string* _internal_mutable_hostname();

  public:
  // @@protoc_insertion_point(class_scope:MapReduce.HeartBeatMsg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HeartBeatMsg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HeartBeatMsg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hostname_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mr_2eproto;
};
// -------------------------------------------------------------------

class FinishMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MapReduce.FinishMsg) */ {
 public:
  inline FinishMsg() : FinishMsg(nullptr) {}
  ~FinishMsg() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FinishMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline FinishMsg(const FinishMsg& from) : FinishMsg(nullptr, from) {}
  inline FinishMsg(FinishMsg&& from) noexcept
      : FinishMsg(nullptr, std::move(from)) {}
  inline FinishMsg& operator=(const FinishMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishMsg& operator=(FinishMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FinishMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishMsg* internal_default_instance() {
    return reinterpret_cast<const FinishMsg*>(
        &_FinishMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FinishMsg& a, FinishMsg& b) { a.Swap(&b); }
  inline void Swap(FinishMsg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FinishMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FinishMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FinishMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FinishMsg& from) { FinishMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FinishMsg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MapReduce.FinishMsg"; }

 protected:
  explicit FinishMsg(::google::protobuf::Arena* arena);
  FinishMsg(::google::protobuf::Arena* arena, const FinishMsg& from);
  FinishMsg(::google::protobuf::Arena* arena, FinishMsg&& from) noexcept
      : FinishMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 2,
    kTaskTypeFieldNumber = 1,
  };
  // string fileName = 2;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // .MapReduce.TaskType taskType = 1;
  void clear_tasktype() ;
  ::MapReduce::TaskType tasktype() const;
  void set_tasktype(::MapReduce::TaskType value);

  private:
  ::MapReduce::TaskType _internal_tasktype() const;
  void _internal_set_tasktype(::MapReduce::TaskType value);

  public:
  // @@protoc_insertion_point(class_scope:MapReduce.FinishMsg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FinishMsg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FinishMsg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr filename_;
    int tasktype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mr_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NodeMessage

// bool isBusy = 1;
inline void NodeMessage::clear_isbusy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isbusy_ = false;
}
inline bool NodeMessage::isbusy() const {
  // @@protoc_insertion_point(field_get:MapReduce.NodeMessage.isBusy)
  return _internal_isbusy();
}
inline void NodeMessage::set_isbusy(bool value) {
  _internal_set_isbusy(value);
  // @@protoc_insertion_point(field_set:MapReduce.NodeMessage.isBusy)
}
inline bool NodeMessage::_internal_isbusy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isbusy_;
}
inline void NodeMessage::_internal_set_isbusy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isbusy_ = value;
}

// -------------------------------------------------------------------

// Reply

// .MapReduce.TaskType taskType = 1;
inline void Reply::clear_tasktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasktype_ = 0;
}
inline ::MapReduce::TaskType Reply::tasktype() const {
  // @@protoc_insertion_point(field_get:MapReduce.Reply.taskType)
  return _internal_tasktype();
}
inline void Reply::set_tasktype(::MapReduce::TaskType value) {
  _internal_set_tasktype(value);
  // @@protoc_insertion_point(field_set:MapReduce.Reply.taskType)
}
inline ::MapReduce::TaskType Reply::_internal_tasktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::MapReduce::TaskType>(_impl_.tasktype_);
}
inline void Reply::_internal_set_tasktype(::MapReduce::TaskType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasktype_ = value;
}

// string fileName = 2;
inline void Reply::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& Reply::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MapReduce.Reply.fileName)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Reply::set_filename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MapReduce.Reply.fileName)
}
inline std::string* Reply::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:MapReduce.Reply.fileName)
  return _s;
}
inline const std::string& Reply::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void Reply::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* Reply::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* Reply::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MapReduce.Reply.fileName)
  return _impl_.filename_.Release();
}
inline void Reply::set_allocated_filename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MapReduce.Reply.fileName)
}

// -------------------------------------------------------------------

// FinishMsg

// .MapReduce.TaskType taskType = 1;
inline void FinishMsg::clear_tasktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasktype_ = 0;
}
inline ::MapReduce::TaskType FinishMsg::tasktype() const {
  // @@protoc_insertion_point(field_get:MapReduce.FinishMsg.taskType)
  return _internal_tasktype();
}
inline void FinishMsg::set_tasktype(::MapReduce::TaskType value) {
  _internal_set_tasktype(value);
  // @@protoc_insertion_point(field_set:MapReduce.FinishMsg.taskType)
}
inline ::MapReduce::TaskType FinishMsg::_internal_tasktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::MapReduce::TaskType>(_impl_.tasktype_);
}
inline void FinishMsg::_internal_set_tasktype(::MapReduce::TaskType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasktype_ = value;
}

// string fileName = 2;
inline void FinishMsg::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& FinishMsg::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MapReduce.FinishMsg.fileName)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FinishMsg::set_filename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MapReduce.FinishMsg.fileName)
}
inline std::string* FinishMsg::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:MapReduce.FinishMsg.fileName)
  return _s;
}
inline const std::string& FinishMsg::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void FinishMsg::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* FinishMsg::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* FinishMsg::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MapReduce.FinishMsg.fileName)
  return _impl_.filename_.Release();
}
inline void FinishMsg::set_allocated_filename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MapReduce.FinishMsg.fileName)
}

// -------------------------------------------------------------------

// HeartBeatMsg

// string hostname = 1;
inline void HeartBeatMsg::clear_hostname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hostname_.ClearToEmpty();
}
inline const std::string& HeartBeatMsg::hostname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MapReduce.HeartBeatMsg.hostname)
  return _internal_hostname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HeartBeatMsg::set_hostname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hostname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MapReduce.HeartBeatMsg.hostname)
}
inline std::string* HeartBeatMsg::mutable_hostname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hostname();
  // @@protoc_insertion_point(field_mutable:MapReduce.HeartBeatMsg.hostname)
  return _s;
}
inline const std::string& HeartBeatMsg::_internal_hostname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hostname_.Get();
}
inline void HeartBeatMsg::_internal_set_hostname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hostname_.Set(value, GetArena());
}
inline std::string* HeartBeatMsg::_internal_mutable_hostname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hostname_.Mutable( GetArena());
}
inline std::string* HeartBeatMsg::release_hostname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MapReduce.HeartBeatMsg.hostname)
  return _impl_.hostname_.Release();
}
inline void HeartBeatMsg::set_allocated_hostname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hostname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hostname_.IsDefault()) {
          _impl_.hostname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MapReduce.HeartBeatMsg.hostname)
}

// -------------------------------------------------------------------

// HeartBeatReply

// bool receive = 1;
inline void HeartBeatReply::clear_receive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receive_ = false;
}
inline bool HeartBeatReply::receive() const {
  // @@protoc_insertion_point(field_get:MapReduce.HeartBeatReply.receive)
  return _internal_receive();
}
inline void HeartBeatReply::set_receive(bool value) {
  _internal_set_receive(value);
  // @@protoc_insertion_point(field_set:MapReduce.HeartBeatReply.receive)
}
inline bool HeartBeatReply::_internal_receive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receive_;
}
inline void HeartBeatReply::_internal_set_receive(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receive_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace MapReduce


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::MapReduce::TaskType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::MapReduce::TaskType>() {
  return ::MapReduce::TaskType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_mr_2eproto_2epb_2eh
